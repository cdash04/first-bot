name: Push-bot-to-EC2

# Trigger deployment only on push to master branch
on:
  push:
    paths:
      - 'src/bot/**'
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EC2 on master branch push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the files
        uses: actions/checkout@v2

      - name: Install and Build
        run: |
          yarn install
          yarn build

      - name: Create dotenv file
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          echo "BOT_NAME=${{secrets.BOT_NAME}}" >> .env.dev
          echo "TWITCH_CLIENT_ID=${{secrets.TWITCH_CLIENT_ID}}" >> .env.dev
          echo "TWITCH_CLIENT_SECRET=${{secrets.TWITCH_CLIENT_SECRET}}" >> .env.dev
          echo "TWITCH_TMI_OAUTH=${{secrets.TWITCH_TMI_OAUTH}}" >> .env.dev
          echo "TWITCH_EVENT_SUB_LISTENER_SECRET=${{secrets.TWITCH_EVENT_SUB_LISTENER_SECRET}}" >> .env.dev
          echo "APP_API_URL=${{secrets.APP_API_URL}}" >> .env.dev
          echo "NODE_ENV=dev" >> .env.dev

      - name: Deploy to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ".env.dev,package.json,dist/bot"
          target: "."

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/dev.key
          chmod 600 ~/.ssh/dev.key
          cat >>~/.ssh/config <<END
          Host dev
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/dev.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.USERNAME }}
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          SSH_HOST: ${{ secrets.HOST_DNS }}

      - name: Stop the server
        run: ssh dev 'pm2 stop 0'

      - name: Start the server
        if: ${{ always() }}
        run: ssh dev 'pm2 start 0'
